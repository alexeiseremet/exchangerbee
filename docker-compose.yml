version: '3.7'

services:
  database:
    build: ./database
    env_file:
    - ./database/.env
    ports:
    - "27017:27017"
    restart: always
    volumes:
    - ./database/db:/data/db

  backend:
    build: ./backend
    env_file:
    - ./backend/.env
    ports:
    - "3010:3010"
    restart: always
    depends_on:
    - database
    volumes:
    - ./backend:/usr/src/backend
    - ./backend/screenshots:/usr/src/backend/screenshots
    - /usr/src/backend/node_modules

  crawler:
    build: ./crawler
    env_file:
    - ./crawler/.env
    depends_on:
    - backend
    ports:
    - "3030:3030"
    restart: always

  frontend:
    build: ./frontend
    env_file:
    - ./frontend/.env
    ports:
    - "3050:3050"
    restart: always
    depends_on:
    - backend
    volumes:
    - ./frontend:/usr/src/frontend
    - /usr/src/frontend/node_modules
    - /usr/src/frontend/.next

#########################
# docker-compose down
# docker-compose build --no-cache
# docker-compose up -d --force-recreate
# docker ps -a
# docker exec -it 89fc7b0ff34d bash/sh
# docker logs 89fc7b0ff34d
# docker system prune

# With Dockerfile.
# docker build --no-cache --tag=exbee_frontend_1 .
# docker run -it --publish=3050:3050 exbee_frontend_1

# Clean.
# https://docs.docker.com/get-started/part2/
# https://gist.github.com/bastman/5b57ddb3c11942094f8d0a97d461b430
# docker rm $(docker ps -qa --no-trunc --filter "status=exited")
# docker inspect -f "{{json .Mounts}}" exbee_frontend_1

# Mongo
# show dbs > use db_name > show tables > db.quotes.find().limit(2)
